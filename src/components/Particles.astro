---
// src/components/Particles.astro
---
<!-- Dos canvas superpuestos: uno para los petalos (fondo), otro para el corazon (frente) -->
<canvas id="petal-canvas" class="absolute top-0 left-0 w-full h-full -z-11"></canvas>
<canvas id="heart-canvas" class="absolute top-0 left-0 w-full h-full -z-10"></canvas>

<script>
  const petalCanvas = document.getElementById('petal-canvas') as HTMLCanvasElement;
  const petalCtx = petalCanvas.getContext('2d');
  const heartCanvas = document.getElementById('heart-canvas') as HTMLCanvasElement;
  const heartCtx = heartCanvas.getContext('2d');

  if (petalCtx && heartCtx) {
    petalCanvas.width = window.innerWidth; petalCanvas.height = window.innerHeight;
    heartCanvas.width = window.innerWidth; heartCanvas.height = window.innerHeight;

    const alphabet = 'アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズブヅプエェケセテネヘメレヱゲゼデベペオォコソトノホモヨョロヲゴゾドボポヴッンABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    let mouse = { x: null, y: null, radius: 150 };

    // --- SISTEMA 1: PETALOS (SIEMPRE ENCENDIDOS) ---
    let petals: Petal[] = [];
    const NUM_PETALS = 200;

    class Petal {
        x: number; y: number; size: number; speedX: number; speedY: number;
        rotation: number; spin: number; opacity: number;
        constructor(){
            this.x = Math.random() * petalCanvas.width; this.y = Math.random() * petalCanvas.height;
            this.size = Math.random() * 3 + 2; 
            this.speedX = (Math.random() - 0.5) * 0.4; 
            this.speedY = (Math.random() - 0.5) * 0.4; 
            this.rotation = Math.random() * Math.PI * 2; this.spin = (Math.random() - 0.5) * 0.01;
            this.opacity = this.size / 4; // Opacidad base ligada al tamaño
        }
        update(){
            this.x += this.speedX; this.y += this.speedY;
            this.rotation += this.spin;
            if(this.y > petalCanvas.height || this.y < 0) { this.speedY *= -1; }
            if(this.x > petalCanvas.width || this.x < 0) { this.speedX *= -1; }
        }
        draw(){
            // Ya no hay logica de encendido/apagado. La opacidad es constante.
            const finalOpacity = this.opacity;
            
            petalCtx.save();
            petalCtx.translate(this.x, this.y); petalCtx.rotate(this.rotation);
            petalCtx.fillStyle = `rgba(244, 114, 182, ${finalOpacity})`; // ROSA FUERTE
            petalCtx.beginPath(); petalCtx.ellipse(0, 0, this.size, this.size / 2, 0, 0, Math.PI * 2); petalCtx.fill();
            petalCtx.restore();
        }
    }
    function initPetals(){ petals = []; for(let i = 0; i < NUM_PETALS; i++){ petals.push(new Petal()); } }

    // --- SISTEMA 2: LLUVIA DE CODIGO (INTERACTIVO) ---
    const fontSize = 12;
    const columns = Math.floor(heartCanvas.width / fontSize);
    const rainDrops: number[] = [];
    for (let x = 0; x < columns; x++) { rainDrops[x] = 1; }
    const isPointInHeart = (x, y, cx, cy, scale) => {
      const nX = (x - cx) / scale; const nY = -(y - cy) / scale * 1.1 + 0.4;
      return Math.pow(nX * nX + nY * nY - 1, 3) - nX * nX * nY * nY * nY < 0;
    };

    // --- BUCLE PRINCIPAL DE ANIMACION ---
    function animate() {
      petalCtx.clearRect(0, 0, petalCanvas.width, petalCanvas.height);
      petals.forEach(p => { p.update(); p.draw(); });

      heartCtx.fillStyle = 'rgba(10, 10, 10, 0.04)';
      heartCtx.fillRect(0, 0, heartCanvas.width, heartCanvas.height);
      const heartCX = heartCanvas.width / 2, heartCY = heartCanvas.height / 2, heartScale = heartCanvas.width / 8;
      for (let i = 0; i < rainDrops.length; i++) {
        const x = i * fontSize, y = rainDrops[i] * fontSize;
        if (isPointInHeart(x, y, heartCX, heartCY, heartScale)) {
            const text = alphabet.charAt(Math.floor(Math.random() * alphabet.length));
            let distance = Infinity;
            if(mouse.x && mouse.y){ const dx = mouse.x - x, dy = mouse.y - y; distance = Math.sqrt(dx * dx + dy * dy); }
            if (distance < mouse.radius) {
                const p = 1-(distance/mouse.radius); heartCtx.fillStyle = `rgb(${Math.floor(200+(55*p))}, 105, 180)`; heartCtx.font=`${fontSize+p*5}px monospace`;
            } else { heartCtx.fillStyle = '#FF69B4'; heartCtx.font = `${fontSize}px monospace`; }
            heartCtx.fillText(text, x, y);
        }
        if (y > heartCanvas.height && Math.random() > 0.975) { rainDrops[i] = 0; }
        rainDrops[i]++;
      }

      requestAnimationFrame(animate);
    }

    // --- INICIALIZACION Y EVENTOS ---
    initPetals();
    animate();
    window.addEventListener('mousemove', e => { mouse.x = e.x; mouse.y = e.y; });
    window.addEventListener('mouseout', () => { mouse.x = null; mouse.y = null; });
    window.addEventListener('resize', () => { window.location.reload(); });
  }
</script>
